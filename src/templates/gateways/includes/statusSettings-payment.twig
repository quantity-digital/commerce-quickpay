{% from "_includes/forms" import booleanMenuField, selectizeField %}
<h2>Order status handling</h2>
<div class="flex-fields">
	<div class="field width-50">
		{{ booleanMenuField({
			label: "Auto capture on status change"|t,
			id: 'autoCapture',
			name: 'autoCapture',
			instructions: "If checked, payment will be autocaptured when status is changed"|t('commerce-quickpay'),
        	includeEnvVars: true,
			value: (gateway.autoCapture is defined) ? gateway.autoCapture : 0,
			errors: gateway.getErrors('autoCapture'),
			on: (gateway.autoCapture is defined) ? gateway.autoCapture : 0,
			toggle : 'autoCaptureToggle'
		}) }}

		<div id="autoCaptureToggle" {% if gateway.autoCapture is not defined or not gateway.autoCapture %} class="hidden" {% endif %}>
			{{ selectizeField({
				first: true,
				label: 'Auto capture status'|t('commerce-quickpay'),
				instructions: 'On what status should the payment be auto captured'|t('commerce-quickpay'),
				id: 'autoCaptureStatus',
				name: 'autoCaptureStatus',
				options : statusOptions,
        		includeEnvVars: true,
				value : gateway.autoCaptureStatus,
				errors: gateway.getErrors('autoCaptureStatus') ?? null,
			}) }}
		</div>
	</div>

	<div class="field width-50">
		{{ booleanMenuField({
			label: "Auto status after capture"|t,
			id: 'enableAutoStatus',
			name: 'enableAutoStatus',
        	includeEnvVars: true,
			instructions: "If enabled, the order status will update after capture is complete"|t('commerce-quickpay'),
			value: (gateway.enableAutoStatus is defined) ? gateway.enableAutoStatus : 0,
			errors: gateway.getErrors('enableAutoStatus'),
			on: (gateway.enableAutoStatus is defined) ? gateway.enableAutoStatus : 0,
			toggle : 'autoStatusToggle'
		}) }}

		<div id="autoStatusToggle" {% if gateway.enableAutoStatus is not defined or not gateway.enableAutoStatus %} class="hidden" {% endif %}>
			{{ selectizeField({
				first: true,
				label: 'Status after capture'|t('commerce-quickpay'),
				instructions: 'What will the status be after capture'|t('commerce-quickpay'),
				id: 'afterCaptureStatus',
				name: 'afterCaptureStatus',
				options : statusOptions,
        		includeEnvVars: true,
				value : gateway.afterCaptureStatus,
				errors: gateway.getErrors('afterCaptureStatus') ?? null,
			}) }}
		</div>
	</div>
</div>
<hr>
